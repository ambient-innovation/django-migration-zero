[build-system]
requires = ["flit_core>=3.4"]
build-backend = "flit_core.buildapi"

[project]
name = "django-migration-zero"
authors = [
    {'name' = 'Ambient Digital', 'email' = 'hello@ambient.digital'},
]
readme = "README.md"
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Web Environment",
    "Framework :: Django",
    "Framework :: Django :: 3.2",
    "Framework :: Django :: 4.1",
    "Framework :: Django :: 4.2",
    "Framework :: Django :: 5.0",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Utilities",
]
dynamic = ["version", "description"]
license = {"file" = "LICENSE.md"}
dependencies = [
    'Django>=4.1',
]


[project.optional-dependencies]
dev = [
   'freezegun~=1.2',
   'pytest-django~=4.5',
   'pytest-mock~=3.10',
   'pre-commit~=3.5',
   'black~=23.9',
   'sphinx==4.2.0',
   'sphinx-rtd-theme==1.0.0',
   'm2r2==0.3.1',
   'mistune<2.0.0',
   'ambient-package-update~=23.10.1',
   'unittest-parametrize~=1.3',
]

[tool.flit.module]
name = "django_migration_zero"

[project.urls]
'Homepage' = 'https://github.com/ambient-innovation/django-migration-zero/'
'Documentation' = 'https://django-migration-zero.readthedocs.io/en/latest/index.html'
'Maintained by' = 'https://ambient.digital/'
'Bugtracker' = 'https://github.com/ambient-innovation/django-migration-zero/issues'
'Changelog' = 'https://django-migration-zero.readthedocs.io/en/latest/features/changelog.html'


[tool.black]
# use force-exclude, so that black also applies exclude when run using pre-commit: https://github.com/psf/black/issues/395
force-exclude = '''.*/migrations/.*'''
line-length = 120
multi_line_output = 3
skip-string-normalization = true
include_trailing_comma = true

[tool.ruff]
select = [
    "E",       # pycodestyle errors
    "W",       # pycodestyle warnings
    "F",       # Pyflakes
    "N",       # pep8-naming
    "I",       # isort
    "B",       # flake8-bugbear
    "A",       # flake8-builtins
    "DTZ",     # flake8-datetimez
    "DJ",      # flake8-django
    "RUF100",  # Removes unnecessary "#noqa" comments
    "YTT",     # Avoid non-future-prove usages of "sys"
    # "FBT",     # Protects you from the "boolean trap bug"
    "C4",      # Checks for unnecessary conversions
    "PIE",     # Bunch of useful rules
    # "SIM",     # Simplifies your code
    "INT",     # Validates your gettext translation strings
    "PGH",     # No all-purpose "# noqa" and eval validation
    # "UP",      # PyUpgrade
]
ignore = [
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = [
    "E",       # pycodestyle errors
    "W",       # pycodestyle warnings
    "F",       # Pyflakes
    "N",       # pep8-naming
    "I",       # isort
    "B",       # flake8-bugbear
    "A",       # flake8-builtins
    "DTZ",     # flake8-datetimez
    "DJ",      # flake8-django
    "RUF100",  # Removes unnecessary "#noqa" comments
    "YTT",     # Avoid non-future-prove usages of "sys"
    # "FBT",     # Protects you from the "boolean trap bug"
    "C4",      # Checks for unnecessary conversions
    "PIE",     # Bunch of useful rules
    # "SIM",     # Simplifies your code
    "INT",     # Validates your gettext translation strings
    "PGH",     # No all-purpose "# noqa" and eval validation
    # "UP",      # PyUpgrade
]
unfixable = []

exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "*/migrations/*"
]

# Same as Black.
line-length = 120

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.12
target-version = "py312"

[tool.tox]
legacy_tox_ini = """
[tox]
requires =
    tox>=4.2
env_list =
    py312-django{50, 42}
    py311-django{50, 42, 41}
    py310-django{50, 42, 41, 40, 32}
    py39-django{42, 41, 40, 32}
    py38-django{42, 41, 40, 32}

[testenv]
package = wheel
deps =
    -r requirements/{envname}.txt
set_env =
    PYTHONDEVMODE = 1
commands =
    python \
      -W error::ResourceWarning \
      -W error::DeprecationWarning \
      -W error::PendingDeprecationWarning \
      -m coverage run \
      -m pytest {posargs:tests}
"""
